server:
  port: 8090
spring:
  application:
    name: "ApplicationApi"
  devtools:
    add-properties: false
logging:
  level:
    org:
      springframework:
        web: "DEBUG"
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"
routes:
  application:
    paths:
      application: "/api/v1/application"
      applications: "/api/v1/applications"
adapters:
  r2dbc:
    host: "localhost"
    port: 5433
    database: "applications"
    schema: "public"
    username: "postgres"
    password: "postgres"
jwt:
  secret: "EstaEsUnaClaveSecretaMuyLargaParaQueSeaSeguraYCumplaConLosRequisitosDelAlgoritmo"
adapter:
  restconsumer:
    timeout: 5000
    url: "http://localhost:8080"
    email: roberto.admin@gmail.com
    password: 123456789
resilience4j:
  circuitbreaker:
    instances:
      fallbackFindUserByEmail:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      fallbackGetToken:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
