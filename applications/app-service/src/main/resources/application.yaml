server:
  port: 8090
spring:
  application:
    name: "ApplicationApi"
  devtools:
    add-properties: false
logging:
  level:
    org:
      springframework:
        web: "DEBUG"
      boot:
        actuate: "TRACE"
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus,info"
  endpoint:
    health:
      probes:
        enabled: true
      show-details: "always"
  health:
    circuitbreakers:
      enabled: true
cors:
  allowed-origins: "${CORS}"
routes:
  application:
    paths:
      application: "/api/v1/application"
      applications: "/api/v1/applications"
adapters:
  r2dbc:
    host: "${DB_HOST}"
    port: "${DB_PORT}"
    database: "${DB_NAME}"
    schema: "public"
aws:
  region: "us-east-1"
  dbSecretName: "${DB_SECRET_NAME}"
  jwtSecretName: "${JWT_SECRET_NAME}"
adapter:
  restconsumer:
    timeout: 5000
    url: "${AUTH_API_URL}"
    authSecretName: "${AUTH_SECRET_NAME}"
  sqs:
    queues:
      validation-queue: "${QUEUE_URL_VALIDATION}"
      notification-queue: "${QUEUE_URL_NOTIFICATION}"
      report-queue: "${QUEUE_URL_REPORT}"
    region: "us-east-1"
entrypoint:
  sqs:
    region: "${AWS_REGION}"
    queueUrl: "${QUEUE_URL_LISTENER}"
    waitTimeSeconds: 20
    maxNumberOfMessages: 3
    visibilityTimeoutSeconds: 10
    numberOfThreads: 1
resilience4j:
  circuitbreaker:
    instances:
      fallbackFindUserByEmail:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      fallbackGetToken:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
